name: Backport

on:
  pull_request_target:
    types: [labeled, closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    name: Prepare parameters
    steps:
    - name: Prepare parameters
      id: prepare-parameters
      uses: actions/github-script@v7
      with:
        script: |
          const event = context.payload.action;
          
          if (event == "labeled") {
            const label = context.payload.label.name;
            if (label.startsWith("backport-")){
              targets = [label.replace("backport-", "")];
            }
          } else if (event == "closed") {
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
          
            targets = pullRequest.labels
              .map(l => l.name)
              .filter(l => l.startsWith("backport-"))
              .map(l => l.replace("backport-", ""))
          }
          core.setOutput("targets", JSON.stringify(targets));
    outputs:
      targets: ${{ steps.prepare-parameters.outputs.targets }}

  backport:
    if: needs.prepare.outputs.targets != '[]'
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        target: ${{ fromJSON(needs.prepare.outputs.targets) }}
    name: Process backport
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.target }}
          fetch-depth: 0
      - name: Create backport branch
        id: create-branch
        env:
          BACKPORT_SOURCE: ${{ github.event.pull_request.base.ref }}
          BACKPORT_BRANCH: backport/pr-${{ github.event.pull_request.number }}-${{ matrix.target }}
          MERGE_COMMIT: ${{ github.event.pull_request.merge_commit_sha }}
        run: |
          git config user.name "github-action"
          git config user.email "<>"

          git checkout -b $BACKPORT_BRANCH
          while read -r commit_sha; do
            if ! git cherry-pick "$commit_sha"; then
              echo "Conflict in $commit_sha"
              echo "conflict=true" >> $GITHUB_OUTPUT
              exit
            fi
          done <<< "$(git log --pretty=format:%H --reverse $MERGE_COMMIT^1..$MERGE_COMMIT^2)"
          git push origin $BACKPORT_BRANCH
      - name: Handle backport conflict
        if: steps.create-branch.outputs.conflict
        uses: actions/github-script@v7
        env:
          BACKPORT_TARGET: ${{ matrix.target }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Conflict creating backport branch for ${process.env.BACKPORT_TARGET}`
            })
      - name: Create pull request
        if: ${{ !steps.create-branch.outputs.conflict }}
        uses: actions/github-script@v7
        env:
          BACKPORT_BRANCH: backport/pr-${{ github.event.pull_request.number }}-${{ matrix.target }}
          BACKPORT_TARGET: ${{ matrix.target }}
        with:
          script: |
              const { repo, owner } = context.repo;
              const result = await github.rest.pulls.create({
                title: `Backport PR #${context.issue.number} to ${process.env.BACKPORT_TARGET}`,
                owner,
                repo,
                head: process.env.BACKPORT_BRANCH,
                base: process.env.BACKPORT_TARGET,
                body: 'This PR is auto-generated.'
              });


      # Pokud je event "closed", tak musim resit vsechny existujici labely
      # Pokud je vent "labeled", tak resim jen ten konkretni label
      # Vystupem bude muset byt parametr pro matrix job, protoze muze byt PR zavrene
      #   napr. s dvema labely backport-A a backport-B
      # musi mit jako output JSON.stringify([ targets ])

      # const labels = context.payload.pull_request.labels.map(l => l.name) -> je nutne použit rest, uzavrene PR asi nevraci všechny labels
